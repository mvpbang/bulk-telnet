name: Go

on:
  push:
    tags:
      - v*


#on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goarch: amd64
            goos: linux
          - goarch: arm64
            goos: linux
          - goarch: amd64
            goos: windows

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      #- name: Get version
        #id: get_version
        #run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
        #run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      # 从该tag打上一个release标签(会output一些参数,后面才能使用)
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: build
        run: go build -o bulk-telnet
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0

      - name: Packaging...
        run: tar czf bulk-telnet-${{ matrix.goos }}-${{ matrix.goarch }}.tgz  bulk-telnet

      - name: Uploading assets...
        if: ${{ !env.ACT }}
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./bulk-telnet-${{ matrix.goos }}-${{ matrix.goarch }}.tgz
          asset_name: bulk-telnet-${{ matrix.goos }}-${{ matrix.goarch }}.tgz
          asset_content_type: application/gzip